// generated 2007/1/10 5:22:26 SGT by fabrice@amra.dyndns.org.(none)
// using glademm V2.12.1
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/fabrice/Projects/MetaSE/pinot/UI/GTK2/metase-gtk2.glade
// for gtk 2.10.4 and gtkmm 2.10.5
//
// Please modify the corresponding derived classes in ./src/launcherDialog.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/sigc++.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "launcherDialog_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/button.h>
#include <gtkmm/buttonbox.h>
#include <gtkmm/label.h>
#include <gtkmm/box.h>
#ifndef ENABLE_NLS
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif


launcherDialog_glade::launcherDialog_glade(
)
{  
   
   Gtk::Dialog *launcherDialog = this;
   gmm_data = new GlademmData(get_accel_group());
   
   Gtk::Button *cancelbutton3 = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
   Gtk::Button *okbutton1 = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
   Gtk::Label *noLauncherLabel = Gtk::manage(new class Gtk::Label(_("There is no helper application defined for this document's type.\n"
		"Please enter the command to open this document.")));
   launcherEntry = Gtk::manage(new class Gtk::Entry());
   rememberCheckbutton = Gtk::manage(new class Gtk::CheckButton(_("Use this command for other documents of the same type.")));
   
   Gtk::VBox *launcherVbox = Gtk::manage(new class Gtk::VBox(false, 0));
#if GTK_VERSION_LT(3, 0)
   cancelbutton3->set_flags(Gtk::CAN_FOCUS);
   cancelbutton3->set_flags(Gtk::CAN_DEFAULT);
#else
   cancelbutton3->set_can_focus();
   cancelbutton3->set_can_default();
#endif
   cancelbutton3->set_relief(Gtk::RELIEF_NORMAL);
#if GTK_VERSION_LT(3, 0)
   okbutton1->set_flags(Gtk::CAN_FOCUS);
   okbutton1->set_flags(Gtk::CAN_DEFAULT);
#else
   okbutton1->set_can_focus();
   okbutton1->set_can_default();
#endif
   okbutton1->set_relief(Gtk::RELIEF_NORMAL);
   launcherDialog->get_action_area()->property_layout_style().set_value(Gtk::BUTTONBOX_END);
   noLauncherLabel->set_alignment(0.5,0.5);
   noLauncherLabel->set_padding(0,0);
   noLauncherLabel->set_justify(Gtk::JUSTIFY_LEFT);
   noLauncherLabel->set_line_wrap(false);
   noLauncherLabel->set_use_markup(false);
   noLauncherLabel->set_selectable(false);
#if GTK_VERSION_LT(3, 0)
   launcherEntry->set_flags(Gtk::CAN_FOCUS);
#else
   launcherEntry->set_can_focus();
#endif
   launcherEntry->set_visibility(true);
   launcherEntry->set_editable(true);
   launcherEntry->set_max_length(0);
   launcherEntry->set_has_frame(true);
   launcherEntry->set_activates_default(false);
#if GTK_VERSION_LT(3, 0)
   rememberCheckbutton->set_flags(Gtk::CAN_FOCUS);
#else
   rememberCheckbutton->set_can_focus();
#endif
   rememberCheckbutton->set_relief(Gtk::RELIEF_NORMAL);
   rememberCheckbutton->set_mode(true);
   rememberCheckbutton->set_active(true);
   launcherVbox->pack_start(*noLauncherLabel, Gtk::PACK_EXPAND_WIDGET, 4);
   launcherVbox->pack_start(*launcherEntry, Gtk::PACK_SHRINK, 4);
   launcherVbox->pack_start(*rememberCheckbutton, Gtk::PACK_SHRINK, 4);
   launcherDialog->get_vbox()->set_homogeneous(false);
   launcherDialog->get_vbox()->set_spacing(0);
   launcherDialog->get_vbox()->pack_start(*launcherVbox);
   launcherDialog->set_title(_("Helper application"));
   launcherDialog->set_modal(false);
   launcherDialog->property_window_position().set_value(Gtk::WIN_POS_NONE);
   launcherDialog->set_resizable(true);
   launcherDialog->property_destroy_with_parent().set_value(false);
#if GTK_VERSION_LT(3, 0)
   launcherDialog->set_has_separator(true);
#endif
   launcherDialog->add_action_widget(*cancelbutton3, -6);
   launcherDialog->add_action_widget(*okbutton1, -5);
   cancelbutton3->show();
   okbutton1->show();
   noLauncherLabel->show();
   launcherEntry->show();
   rememberCheckbutton->show();
   launcherVbox->show();
   launcherDialog->show();
}

launcherDialog_glade::~launcherDialog_glade()
{  delete gmm_data;
}
